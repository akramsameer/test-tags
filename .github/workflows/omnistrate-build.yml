name: Omnistrate Build and Deploy
on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Select build type"
        required: true
        default: "skip docker build"
        type: choice
        options:
          - build
          - skip docker build
  push:
    branches:
      - staging
      - feature/**
      - fix/**
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[bot]')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine build type from commit message
        id: build-type
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "build_type=${{ github.event.inputs.build_type }}" >> $GITHUB_OUTPUT
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "Using manual selection: ${{ github.event.inputs.build_type }}"
          elif [ "${{ github.ref_name }}" = "main" ]; then
            echo "build_type=build" >> $GITHUB_OUTPUT
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "Build triggered on main branch, forcing full build."
          else
            echo "Commit message: $COMMIT_MESSAGE"
            if [[ "$COMMIT_MESSAGE" == *"build(skip-docker)"* ]]; then
              echo "build_type=skip docker build" >> $GITHUB_OUTPUT
              echo "should_run=true" >> $GITHUB_OUTPUT
              echo "Detected 'build(skip-docker)' in commit message"
            elif [[ "$COMMIT_MESSAGE" == *"build(full)"* ]]; then
              echo "build_type=build" >> $GITHUB_OUTPUT
              echo "should_run=true" >> $GITHUB_OUTPUT
              echo "Detected 'build(full)' in commit message"
            else
              echo "build_type=skip" >> $GITHUB_OUTPUT
              echo "should_run=false" >> $GITHUB_OUTPUT
              echo "No build keyword detected, skipping build and deploy steps"
            fi
          fi

      - name: Setup Omnistrate CTL
        if: steps.build-type.outputs.should_run == 'true'
        uses: omnistrate-oss/setup-omnistrate-ctl@v1
        with:
          email: ${{ secrets.OMNISTRATE_USERNAME }}
          password: ${{ secrets.OMNISTRATE_PASSWORD }}

      - name: Authenticate GitHub CLI
        if: steps.build-type.outputs.should_run == 'true'
        run: |
          echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      - name: Build and Deploy (Full Build)
        if: steps.build-type.outputs.should_run == 'true' && steps.build-type.outputs.build_type == 'build'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Running full build..."
          omctl build-from-repo -f docker-compose.yaml --service-name Experio-1.1

      - name: Build and Deploy (Skip Docker Build)
        if: steps.build-type.outputs.should_run == 'true' && steps.build-type.outputs.build_type == 'skip docker build'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Running build with skip docker..."
          omctl build-from-repo -f docker-compose.yaml --skip-docker-build --service-name Experio-1.1

      - name: Upgrade staging to latest version with Omnistrate CLI
        if: steps.build-type.outputs.should_run == 'true'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          omctl upgrade instance-q9cu5nlqs --version=latest
