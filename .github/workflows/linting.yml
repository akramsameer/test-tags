name: Linter
on: [push]

jobs:
  check-message:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    steps:
      - name: Check commit message
        id: check
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "Commit message: $COMMIT_MSG"

          if [[ "$COMMIT_MSG" == feat* || "$COMMIT_MSG" == fix* || "$COMMIT_MSG" == *"BREAKING CHANGE"* ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

  Black:
    needs: check-message
    if: needs.check-message.outputs.skip == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install pipenv
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pipenv"
      - run: pipenv install --dev --deploy
      - run: pipenv run black --check server

  flake8:
    needs: check-message
    if: needs.check-message.outputs.skip == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install pipenv
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pipenv"
      - run: pipenv install --dev --deploy
      - run: pipenv run flake8 server

  Lint_Web:
    needs: check-message
    if: needs.check-message.outputs.skip == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
        working-directory: ./
      - run: npm install
        working-directory: ./client
      - run: npm run tslint
        working-directory: ./client
      - run: npm run eslint
        working-directory: ./client
      - run: npm run format:check
        working-directory: ./client
