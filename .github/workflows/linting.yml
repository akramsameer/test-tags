name: Linter
on: [push]
jobs:
  Black:
    if: |
      !contains(github.event.head_commit.message, 'feat') &&
      !contains(github.event.head_commit.message, 'fix') &&
      !contains(github.event.head_commit.message, 'BREAKING CHANGE')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install pipenv
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pipenv"
      - run: pipenv install --dev --deploy
      - run: pipenv run black --check server
  flake8:
    if: |
      !startsWith(github.event.head_commit.message, 'feat') &&
      !startsWith(github.event.head_commit.message, 'fix') &&
      !contains(github.event.head_commit.message, 'BREAKING CHANGE')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install pipenv
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pipenv"
      - run: pipenv install --dev --deploy
      - run: pipenv run flake8 server
  Lint_Web:
    if: |
      !startsWith(github.event.head_commit.message, 'feat') &&
      !startsWith(github.event.head_commit.message, 'fix') &&
      !contains(github.event.head_commit.message, 'BREAKING CHANGE')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: ðŸ“¦ Install root dependencies
        env:
          NPM_CONFIG_PRODUCTION: false
        working-directory: ./
        run: |
          npm install
      - name: ðŸ“¦ Install client dependencies
        env:
          NPM_CONFIG_PRODUCTION: false
        working-directory: ./client
        run: |
          npm install
      - name: ðŸ†Ž TypeCheck
        working-directory: ./client
        run: npm run tslint
      - name: ðŸš§ ESLint
        working-directory: ./client
        run: npm run eslint
      - name: ðŸŽ¨ Prettier
        working-directory: ./client
        run: npm run format:check
